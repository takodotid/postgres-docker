name: Build & Push OCI Image to OCI Image Registry

on:
  workflow_call:
    inputs:
      dockerfile:
        required: true
        type: string
      images:
        required: true
        type: string
    secrets:
      ghcr-username:
        required: true
      ghcr-access-token:
        required: true

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4.2.1

      - name: Set up QEMU for Docker Buildx
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Get version in Dockerfile
        id: semver
        run: |
          export VERSION=$(cat ${{ inputs.dockerfile }} | sed -n 's/.*postgresql:\([0-9.]*\).*/\1/p')
          echo "MAJOR=$(echo $VERSION | cut -d. -f1)" >> $GITHUB_OUTPUT
          echo "MINOR=$(echo $VERSION | cut -d. -f2)" >> $GITHUB_OUTPUT
          echo "PATCH=$(echo $VERSION | cut -d. -f3)" >> $GITHUB_OUTPUT

      - name: Generate Docker image metadata
        uses: docker/metadata-action@v5.5.1
        id: meta
        with:
          images: ${{ inputs.images }}
          tags: |
            ${{ steps.semver.outputs.MAJOR }}
            ${{ steps.semver.outputs.MAJOR }}.${{ steps.semver.outputs.MINOR }}
            ${{ steps.semver.outputs.MAJOR }}.${{ steps.semver.outputs.MINOR }}.${{ steps.semver.outputs.PATCH }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ secrets.ghcr-username }}
          password: ${{ secrets.ghcr-access-token }}

      - name: Build and push the Docker image from the specified Dockerfile
        id: docker_build
        uses: docker/build-push-action@v6.9.0
        with:
          file: ${{ inputs.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
